#VPC claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pypi-server-claim
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: default
  resources:
    requests:
      storage: 2Gi
---
# actual pod deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pypi-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pypi-server
  template:
    metadata:
      labels:
        app: pypi-server
    spec:
      containers:
      - name: pypi-server
        image: pypiserver/pypiserver:latest
        args: [
          "-P",
           "/data/auth/.htpasswd",
          "-a",
          "update,download,list" ,
          "/data/packages"
        ]
        ports:
          - name: http
            containerPort: 8080
        volumeMounts:
          - mountPath: /data/packages
            name: pypi-packages
          - mountPath: /data/auth/
            name: pypi-auth
      volumes:
      - name: pypi-packages
        persistentVolumeClaim:
          claimName: pypi-server-claim
      - name: pypi-auth
        secret:
          secretName: pypi-auth-secret
---
# Service deployment
apiVersion: v1
kind: Service
metadata:
  name: pypi-server
  labels:
    app: pypi-server
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: pypi-server
---
# Ingress deployment
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: pypi-server-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - hosts:
    - private_pypi.cf
    secretName: pypi-server-ingress-tls
  rules:
    - host: private_pypi.cf
      http:
        paths:
        - path: /
          backend:
            serviceName: pypi-server
            servicePort: 80
